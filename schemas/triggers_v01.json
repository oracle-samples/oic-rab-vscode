{
  "_comment": "Copyright (c) 2023, Oracle and/or its affiliates. All rights reserved. This software is licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl.",
  "$id": "#triggers",
  "title": "Triggers",
  "description": "Triggers models the ability for the adapter to receive an event from an external source and can be implemented in different ways. The supported protocols for receiving events is HTTP. The definition of a trigger allows the modeling of the inbound message structure, the security scheme for message ingress and validation, and the mechanism for creating and deleting a subscription if the third party application.",
  "type": "object",
  "patternProperties": {
    "^[a-zA-Z0-9\\.\\-_]{0,100}$": {
      "$ref": "#/definitions/Trigger"
    }
  },
  "additionalProperties": false,
  "minProperties": 0,
  "maxProperties": 200,
  "definitions": {
    "Trigger": {
      "type": "object",
      "description": "An individual trigger models a specific message that is sent from an external source, which may require certain constructs to be modeled. Minimally, triggers require knowledge of the structure of the message received as well as the manner in which that message will be received by Oracle Integration Cloud. The trigger may need to be subscribed, which requires defining the logic of description in the activation section.",
      "required": [
        "displayName",
        "type",
        "httpMethod",
        "request"
      ],
      "properties": {
        "displayName": {
          "description": "The name of the trigger that will show up as value in the user interface widget in the endpoint configuration user experience. When configuring a trigger, the user is presented with a list of supported triggers If there are more than 1 trigger configured, a dropdown will be presented to the user to choose the desired trigger. This trigger will display in the dropdown.",
          "type": "string",
          "maxLength": 100
        },
        "description": {
          "description": "The description of the trigger that will show up as tooltip in the endpoint configuration user experience.",
          "type": "string",
          "maxLength": 1000
        },
        "type": {
          "type": "string",
          "description": "The type denotes the trigger type. Notification signifies that the external source will notify Oracle Integration Cloud of the message but does not require a response. RequestResponse is a cause where the external source expects a response from the request.",
          "enum": [
            "webhook"
          ]
        },
        "group": {
          "type": "string",
          "description": "The name of the group which is defined in groups section. Association with a group allows sets of triggers to be grouped together so that they can be filtered in the user interface. A section of a group will filter the set displayed to the set associated with that group.",
          "maxLength": 100
        },
        "execute": {
          "description": "The field references a flow defined in the flow section that is the implementation for the trigger in runtime. When a message is received by this trigger, the flow processes the incoming message prior to sending it to the integration. This flow references the logic that processes that message.",
          "type": "string",
          "pattern": "^flow:[\\w|-]+$",
          "maxLength": 100
        },
        "httpMethod": {
          "type": "string",
          "description": "This property denotes the way that the message is received from the external source. In the case of webhooks, typically this is a POST with a body. The message for a webhook may also require a validation of the message based on the supported security scheme dictated by the third party.",
          "enum": [
            "POST",
            "GET",
            "PUT",
            "PATCH",
            "DELETE"
          ]
        },
        "contentType": {
          "description": "Webhook message content type.",
          "type": "string",
          "maxLength": 100
        },
        "request": {
          "$ref": "#/definitions/InputOutput"
        },
        "webhook": {
          "$ref": "#/definitions/TriggerWebhook"
        },
        "response": {
          "$ref": "#/definitions/InputOutput"
        },
        "subscription": {
          "$ref": "#/definitions/Subscription"
        },
        "validationRequests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PingRequestFilter"
          },
          "description": "Contents of this section will be used to identify validation requests. It also allows to override response behavior for such requests. Integration flow will not be executed for validation requests."
        },
        "configuration": {
          "type": "array",
          "description": "The configuration section models the configuration option for an option to fully configure the trigger. Certain triggers may need additional information that users need to provide to allow runtime to function. The configuration options are modeled as user interface widgets with data either statically defined for fed by flows.",
          "items": {
            "$ref": "actions_v01.json#/definitions/ConfigurationField"
          },
          "minItems": 0,
          "maxItems": 40,
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    },
    "TriggerWebhook": {
      "type": "object",
      "description": "The section describes the raw incoming request structure received by the trigger. This represents the message that is sent by the third party endpoint as-is, prior to any processing by the trigger.",
      "properties": {
        "headers": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parameter"
          },
          "minItems": 0,
          "maxItems": 30,
          "uniqueItems": true
        },
        "parameters": {
          "description": "This models the parameters from the webhook request to trigger.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parameter"
          },
          "minItems": 0,
          "maxItems": 30,
          "uniqueItems": true
        },
        "body": {
          "$ref": "#/definitions/InputOutput"
        }
      },
      "additionalProperties": false
    },
    "Subscription": {
      "type": "object",
      "description": "The subscription section models the ability for the trigger to programmatically subscribe to an event if the external source supports an API that support subscription. If this capability is provided, the activation section can help model the subscription during activation and the delete of a subscription during a deactivation of an integration. This section is also used to define filters (server, client or ping).",
      "properties": {
        "filter": {
          "$ref": "#/definitions/RequestFilter"
        },
        "register": {
          "description": "This property will reference a flow that can execute an API call on the external service to programmatically register to an event. In this case, during activation, this flow will be called to call the third party API to create a webhook so that the trigger may start receiving messages.",
          "type": "string",
          "pattern": "^flow:[\\w|-]+$",
          "maxLength": 100
        },
        "deregister": {
          "description": "This property will reference a flow that can execute an API call on the external service to programmatically deregister to an event. In this case, during deactivation, this flow will be called to call the third party API to delete the webhook so the third party may stop sending messages to the trigger.",
          "type": "string",
          "pattern": "^flow:[\\w|-]+$",
          "maxLength": 100
        }
      },
      "additionalProperties": false
    },
    "RequestFilter": {
      "type": "object",
      "description": "This section will enable ability for the event filtering. If this capability is provided, the events can be filtered at server via registration or at client via condition. Section will also be used to filter ping events if any and specify response status for client and response filters.",
      "properties": {
        "server": {
          "type": "object",
          "description": "Contents of this section will be made available to register/unregister subscription. It will allow reuse of the flows."
        },
        "client": {
          "$ref": "#/definitions/ClientSideFilter",
          "description": "Contents of this section will be used to filter events at OIC and allow only selected events. It also allows to override default status in case of ignored or accepted events."
        }
      },
      "additionalProperties": false
    },
    "ClientSideFilter": {
      "type": "object",
      "properties": {
        "condition": {
          "type": "string",
          "description": "JQ expression on incoming request object. This expression must return true or false. If false, request will be ignored.",
          "maxLength": 1000
        },
        "acceptStatus": {
          "type": "integer",
          "default": 202,
          "description": "Override Status code in case request is allowed. This takes precedence over the override specified in ping filter and default value."
        },
        "ignoreStatus": {
          "default": 201,
          "description": "Override Status code in case request is ignored."
        }
      },
      "additionalProperties": false
    },
    "PingRequestFilter": {
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "commons_v01.json#/definitions/flowOrJQExpression",
          "description": "JQ expression on incoming request object. Must return true or false. If true request will be ignored",
          "maxLength": 1000
        },
        "skipAuthentication": {
          "default": false,
          "type": "boolean",
          "description": "Disable Authentication for validation Request matching the condition."
        },
        "response": {
          "description": "Set this to override default response in ping. Default is `201` empty response.",
          "oneOf": [
            {
              "$ref": "commons_v01.json#/definitions/flowOrJQExpression",
              "description": "JQ expression or CNCF flow. Output must be JSON object representing response status, headers and body"
            },
            {
              "$ref": "commons_v01.json#/definitions/httpResponse"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "Parameter": {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {
          "description": "The name of the parameter",
          "type": "string",
          "maxLength": 100
        },
        "type": {
          "description": "The type models the parameter.",
          "type": "string",
          "enum": [
            "boolean",
            "integer",
            "number",
            "string"
          ]
        }
      },
      "additionalProperties": false
    },
    "InputOutput": {
      "oneOf": [
        {
          "type": "object",
          "description": "Schema defined in the schemas section.",
          "required": [
            "schemaType",
            "schema"
          ],
          "properties": {
            "schemaType": {
              "type": "string",
              "enum": [
                "application/schema+json"
              ]
            },
            "schema": {
              "oneOf": [
                {
                  "$ref": "schemas_v01.json#/definitions/Schema"
                },
                {
                  "$ref": "schemas_v01.json#/definitions/Reference"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "string",
          "description": "This field references a flow defined in the flow section that is the implementation for creation of the schema definition. For example, a third party may offer metadata APIs that can retrieve the schema of a given resource given the resource identifier. In this case, the schema does not need to be statically defined in the schema section of the document but instead can be dynamically create the JSON schema definition of that resource from calling the third party API. This field may also drive the schema from user defined schema derived from JSON sample.",
          "pattern": "^flow:[\\w|-]+$|[Uu][Ss][Ee][Rr][Dd][Ee][Ff][Ii][Nn][Ee][Dd]",
          "maxLength": 100
        }
      ]
    }
  }
}
